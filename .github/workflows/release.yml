name: Publish

on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      with:
        ghc-version: '8.6.3'
        enable-stack: true
        stack-version: 'latest'
    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/stack.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Build dependencies
      run: |
        stack --no-terminal build --test --only-dependencies
    - name: Build
      run: |
        mkdir dist
        stack --no-terminal build --test --no-run-tests --copy-bins --local-bin-path dist
    - name: Test
      run: stack --no-terminal build --test
    - name: Zip
      run: |
        cd dist
        tar czvf vcr-proxy-linux.tar.gz vcr-proxy
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./dist/vcr-proxy-linux.tar.gz
        asset_name: vcr-proxy-linux.tar.gz
        asset_content_type: application/x-tar
